---
import { getCollection } from "astro:content";
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import BlogPost from "../../components/BlogPosts.astro";

export async function getStaticPaths() {
    const allPosts = await getCollection("posts");
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag),
        );
        // 按照时间顺序为筛选过的符合标签的文章排序
        filteredPosts.sort(
            (a, b) => b.data.date.getTime() - a.data.date.getTime(),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const filteredPosts = posts.filter((post) => post.data.tags.includes(tag));
---

<DefaultLayout>
    <main
        class="px-8 w-[25rem] min-[360px]:w-[30rem] md:w-[62.5rem] mx-auto min-h-screen"
    >
        <div class="flex justify-between items-center">
            <p class="text-3xl font-semibold text-gray py-6">{tag} ✨</p>
            <p
                class={`text-2xl font-semibold text-white px-2 bg-gray-500 rounded-full`}
            >
                {posts.length}
            </p>
        </div>
        <ul>
            {
                posts.map((post) => (
                    <BlogPost
                        url={`/posts/${post.slug}/`}
                        title={post.data.title}
                        cover={post.data.cover}
                        pubDate={post.data.pubDate}
                        categories={post.data.cate.name}
                        themecolor={post.data.themecolor}
                    />
                ))
            }
        </ul>
    </main>
</DefaultLayout>
